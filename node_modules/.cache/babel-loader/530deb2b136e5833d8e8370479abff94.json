{"remainingRequest":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\src\\views\\Home.vue","mtime":1627538704925},{"path":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627538809347},{"path":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1627538814240},{"path":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627538809347},{"path":"C:\\Users\\Admin\\Documents\\w\\vue2-main\\vue2-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1627538815611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0FkbWluL0RvY3VtZW50cy93L3Z1ZTItbWFpbi92dWUyLW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBpbXBvcnQgTGF5b3V0IGZyb20gIi4vTGF5b3V0LnZ1ZSIKLy8gaW1wb3J0IE5ld3NGaWx0ZXIgZnJvbSAiLi9jb21wb25lbnRzL05ld3NGaWx0ZXIudnVlIgppbXBvcnQgbWxpc3QgZnJvbSAiLi9saXN0LnZ1ZSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IG1kYkNvbnRhaW5lciwgbWRiQ29sLCBtZGJSb3csIG1kYkVkZ2VIZWFkZXIsIG1kYkNhcmRCb2R5IH0gZnJvbSAnbWRidnVlJzsgLy8gaW1wb3J0IGRhdGEgZnJvbSAiLi9wb3N0cy5qc29uIgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIC8vIExheW91dCwKICAgIC8vIE5ld3NGaWx0ZXIsCiAgICBtbGlzdDogbWxpc3QsCiAgICBtZGJDb250YWluZXI6IG1kYkNvbnRhaW5lciwKICAgIG1kYkNvbDogbWRiQ29sLAogICAgbWRiUm93OiBtZGJSb3csCiAgICBtZGJFZGdlSGVhZGVyOiBtZGJFZGdlSGVhZGVyLAogICAgbWRiQ2FyZEJvZHk6IG1kYkNhcmRCb2R5CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8gSGVscGVyIGZ1bmN0aW9uIGZvciBleHRyYWN0aW5nIGEgbmVzdGVkIGltYWdlIG9iamVjdAogICAgZmV0Y2hOZXdzOiBmdW5jdGlvbiBmZXRjaE5ld3MoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB1cmwsIHJlc3BvbnNlLCByZXN1bHRzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgdXJsID0gImh0dHBzOi8vdGktcmVhY3QtdGVzdC5oZXJva3VhcHAuY29tL3VzZXJzIjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU2VydmVyIEVycm9yOiIsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgcmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5wb3N0cyA9IHJlc3VsdHMubWFwKGZ1bmN0aW9uIChwb3N0KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IHBvc3QuaWQsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogcG9zdC5uYW1lLAogICAgICAgICAgICAgICAgICAgIG9jY3VwYXRpb246IHBvc3Qub2NjdXBhdGlvbiwKICAgICAgICAgICAgICAgICAgICBlbWFpbDogcG9zdC5lbWFpbCwKICAgICAgICAgICAgICAgICAgICBiaW86IHBvc3QuYmlvLAogICAgICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IHBvc3QuY3JlYXRlZF9hdCwKICAgICAgICAgICAgICAgICAgICB1cGRhdGVkX2F0OiBwb3N0LnVwZGF0ZWRfYXQKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICAgIGlmIChfY29udGV4dC50MC5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAvLyBjbGllbnQgcmVjZWl2ZWQgYW4gZXJyb3IgcmVzcG9uc2UgKDV4eCwgNHh4KQogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU2VydmVyIEVycm9yOiIsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX2NvbnRleHQudDAucmVxdWVzdCkgewogICAgICAgICAgICAgICAgICAvLyBjbGllbnQgbmV2ZXIgcmVjZWl2ZWQgYSByZXNwb25zZSwgb3IgcmVxdWVzdCBuZXZlciBsZWZ0CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJOZXR3b3JrIEVycm9yOiIsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJDbGllbnQgRXJyb3I6IiwgX2NvbnRleHQudDApOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaE5ld3MoKTsKICB9Cn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA,OAAA,KAAA,MAAA,YAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,EAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,WAAA,QAAA,QAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA;AACA;AACA,IAAA,KAAA,EAAA,KAHA;AAIA,IAAA,YAAA,EAAA,YAJA;AAKA,IAAA,MAAA,EAAA,MALA;AAMA,IAAA,MAAA,EAAA,MANA;AAOA,IAAA,aAAA,EAAA,aAPA;AASA,IAAA,WAAA,EAAA;AATA,GADA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA;AAEA,IAAA,SAHA,uBAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,GAFA,GAEA,2CAFA;AAAA;AAAA,uBAGA,KAAA,CAAA,GAAA,CAAA,GAAA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAIA,gBAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,QAAA,CAAA,IAAA;AACA,gBAAA,OALA,GAKA,QAAA,CAAA,IALA;AAMA,gBAAA,KAAA,CAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,yBAAA;AACA,oBAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,oBAAA,IAAA,EAAA,IAAA,CAAA,IAFA;AAGA,oBAAA,UAAA,EAAA,IAAA,CAAA,UAHA;AAIA,oBAAA,KAAA,EAAA,IAAA,CAAA,KAJA;AAKA,oBAAA,GAAA,EAAA,IAAA,CAAA,GALA;AAMA,oBAAA,UAAA,EAAA,IAAA,CAAA,UANA;AAOA,oBAAA,UAAA,EAAA,IAAA,CAAA;AAPA,mBAAA;AAAA,iBAAA,CAAA;AANA;AAAA;;AAAA;AAAA;AAAA;;AAiBA,oBAAA,YAAA,QAAA,EAAA;AACA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA,iBAHA,MAGA,IAAA,YAAA,OAAA,EAAA;AACA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,iBAHA,MAGA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AA9BA,GAnBA;AAmDA,EAAA,OAnDA,qBAmDA;AACA,SAAA,SAAA;AACA;AArDA,CAAA","sourcesContent":["<template>\r\n  <Layout>\r\n    <div style=\"margin-top: -15px; overflow-x: hidden;\">\r\n       <mdb-edge-header color=\"teal darken-2\">\r\n        <div class=\"home-page-background\"></div>\r\n      </mdb-edge-header>\r\n           \r\n    <mdb-container class=\"free-bird\">\r\n        <mdb-row>\r\n          <mdb-col md=\"10\" class=\"mx-auto white z-depth-1 py-2 px-2\">\r\n            <mdb-card-body>\r\n              <h2 class=\"pb-4\"><strong>Home page</strong></h2>\r\n              \r\n           \r\n            </mdb-card-body>\r\n          </mdb-col>\r\n        </mdb-row>\r\n      </mdb-container>\r\n  \r\n     </div>\r\n    <mlist :posts=\"posts\" />\r\n   \r\n  </Layout>\r\n</template>\r\n\r\n<script>\r\n// import Layout from \"./Layout.vue\"\r\n// import NewsFilter from \"./components/NewsFilter.vue\"\r\nimport mlist from \"./list.vue\"\r\nimport axios from \"axios\"\r\nimport { mdbContainer, mdbCol, mdbRow,  mdbEdgeHeader,  mdbCardBody } from 'mdbvue';\r\n// import data from \"./posts.json\"\r\n\r\nexport default {\r\n  components: {\r\n    // Layout,\r\n    // NewsFilter,\r\n    mlist,\r\n     mdbContainer,\r\n    mdbCol,\r\n    mdbRow,\r\n    mdbEdgeHeader,\r\n    \r\n    mdbCardBody\r\n  },\r\n  \r\n\r\n  data() {\r\n    return {\r\n      posts: [],\r\n    }\r\n  },\r\n  methods: {\r\n    // Helper function for extracting a nested image object\r\n   \r\n    async fetchNews() {\r\n      try {\r\n        const url = \"https://ti-react-test.herokuapp.com/users\"\r\n        const response = await axios.get(url)\r\n          console.log(\"Server Error:\", response.data)\r\n        const results = response.data\r\n        this.posts = results.map(post => ({\r\n          id: post.id,\r\n          name: post.name,\r\n          occupation: post.occupation,\r\n          email: post.email,\r\n          bio: post.bio,\r\n          created_at: post.created_at,\r\n          updated_at: post.updated_at\r\n         \r\n        }))\r\n      } catch (err) {\r\n        if (err.response) {\r\n          // client received an error response (5xx, 4xx)\r\n          console.log(\"Server Error:\", err)\r\n        } else if (err.request) {\r\n          // client never received a response, or request never left\r\n          console.log(\"Network Error:\", err)\r\n        } else {\r\n          console.log(\"Client Error:\", err)\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchNews()\r\n  },\r\n\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}