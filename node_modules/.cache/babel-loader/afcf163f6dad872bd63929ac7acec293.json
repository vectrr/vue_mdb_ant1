{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\thread-loader\\dist\\cjs.js!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\services\\services.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\services\\services.vue","mtime":1645600010026},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3dhbXA2NC93d3cvdy8xNS92dWVfbWRiX2FudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1saXN0IGZyb20gIi4vc2xpc3QudnVlIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgbWRiRWRnZUhlYWRlciwgbWRiQ2FyZCwgbWRiQ2FyZEJvZHkgfSBmcm9tICdtZGJ2dWUnOyAvLyBpbXBvcnQgZGF0YSBmcm9tICIuL3Bvc3RzLmpzb24iCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgbWxpc3Q6IG1saXN0LAogICAgbWRiRWRnZUhlYWRlcjogbWRiRWRnZUhlYWRlciwKICAgIG1kYkNhcmQ6IG1kYkNhcmQsCiAgICBtZGJDYXJkQm9keTogbWRiQ2FyZEJvZHkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcm9kdWN0czogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBIZWxwZXIgZnVuY3Rpb24gZm9yIGV4dHJhY3RpbmcgYSBuZXN0ZWQgaW1hZ2Ugb2JqZWN0CiAgICBmZXRjaE5ld3M6IGZ1bmN0aW9uIGZldGNoTmV3cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIG11cmwsIG1EYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLnByb2R1Y3RzID0gW107CiAgICAgICAgICAgICAgICBtdXJsID0gX3RoaXMuJHN0b3JlLnN0YXRlLm1Vcmw7CiAgICAgICAgICAgICAgICBtRGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbm06ICJwZXRlciIgLy8gcGFzczp0aGlzLnBhc3MKCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgLy8gdXJsOiAnaHR0cDovL2xvY2FsaG9zdC9udy92YXAvcmVnQXBpLnBocD9hcGljYWxsPXNpZ251cCcKICAgICAgICAgICAgICAgICAgdXJsOiBtdXJsICsgJ2FwaS5waHA/YXBpY2FsbD1hX3NlcnZpY2VzJywKICAgICAgICAgICAgICAgICAgZGF0YTogbURhdGEsCiAgICAgICAgICAgICAgICAgIGNvbmZpZzogewogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHZhciByZXN1bHRzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgICAgdmFyIG15RGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsgLy8gY29uc29sZS5sb2coInJlc3BvbnNlOiAiK0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CgogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UxOiAiICsgSlNPTi5zdHJpbmdpZnkobXlEYXRhKSk7CgogICAgICAgICAgICAgICAgICBpZiAocmVzdWx0cy52YWwgPT0gMikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG15RGF0YSk7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvZHVjdHMgPSBteURhdGEubWFwKGZ1bmN0aW9uIChwb3N0KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgICBpZDogcG9zdC5zaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHBvc3QuaGVhZCwKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHBvc3QuZGVzY3JpcHRpb24gLy8gaW1hZ2VzOiBwb3N0LnByby5pbWcsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHR5cGU6IHBvc3QucHJvLnR5cGUsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHByaWNlOiBwb3N0LnByby5wcmljZSwKICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW06IHBvc3QuaW0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlZF9hdDogcG9zdC5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAvLyB1cGRhdGVkX2F0OiBwb3N0Lm5hbWUKCiAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgLy9oYW5kbGUgZXJyb3IKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coImVycm9yIiArIHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaE5ld3MoKTsKICB9Cn07"},{"version":3,"sources":["services.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,KAAA,MAAA,aAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,aAAA,EAAA,OAAA,EAAA,WAAA,QAAA,QAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,aAAA,EAAA,aAHA;AAIA,IAAA,OAAA,EAAA,OAJA;AAKA,IAAA,WAAA,EAAA;AALA,GADA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA;AAEA,IAAA,SAHA,uBAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AACA,gBAAA,IAFA,GAEA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAFA;AAGA,gBAAA,KAHA,GAGA;AACA,kBAAA,EAAA,EAAA,OADA,CAEA;;AAFA,iBAHA;AAQA,gBAAA,KAAA,CAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA;AACA,kBAAA,GAAA,EAAA,IAAA,GAAA,4BAHA;AAIA,kBAAA,IAAA,EAAA,KAJA;AAKA,kBAAA,MAAA,EAAA;AAAA,oBAAA,OAAA,EAAA;AAAA,sCAAA;AAAA;AAAA;AALA,iBAAA,CAAA,CAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA,sBAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,sBAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAFA,CAGA;;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA;;AAEA,sBAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,oBAAA,KAAA,CAAA,QAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,6BAAA;AAEA,wBAAA,EAAA,EAAA,IAAA,CAAA,GAFA;AAGA,wBAAA,IAAA,EAAA,IAAA,CAAA,IAHA;AAIA,wBAAA,WAAA,EAAA,IAAA,CAAA,WAJA,CAKA;AACA;AACA;AACA;AACA;AACA;;AAVA,uBAAA;AAAA,qBAAA,CAAA;AAaA;AAGA,iBA/BA,EAgCA,KAhCA,CAgCA,UAAA,QAAA,EAAA;AACA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,UAAA,QAAA;AACA,iBAnCA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;AAjDA,GAfA;AAkEA,EAAA,OAlEA,qBAkEA;AACA,SAAA,SAAA;AACA;AApEA,CAAA","sourcesContent":["<template>\n  <Layout>\n    <div style=\"margin-top: -15px; overflow-x: ;\">\n\n      <mdb-edge-header color=\"\" style=\"background-color: #275d2b;position: fixed;\n    z-index: 0;\n    top: 0;\n    height: 50%;\n    width: 100%; \">\n        <div class=\"home-page-background\"></div>\n      </mdb-edge-header>\n  <mdb-card style=\"max-width: 1000px;width:99%;margin-top:102px\">\n    <mdb-card-body>\n\n      <mlist :posts=\"products\" />\n     \n    </mdb-card-body>\n  </mdb-card>\n     </div>\n   \n  </Layout>\n</template>\n\n<script>\nimport mlist from \"./slist.vue\"\nimport axios from \"axios\"\nimport {  mdbEdgeHeader,  mdbCard, mdbCardBody, } from 'mdbvue';\n// import data from \"./posts.json\"\n\nexport default {\n  components: {\n    \n    mlist,\n    mdbEdgeHeader,\n    mdbCard,\n    mdbCardBody\n  },\n  \n\n  data() {\n    return {\n      products: [],\n    }\n  },\n  methods: {\n    // Helper function for extracting a nested image object\n   \n    async fetchNews() {\nthis.products=[];\n        var murl=this.$store.state.mUrl;\n       const mData = { \n    nm:\"peter\" ,\n    // pass:this.pass\n };\n    \naxios({\n          method: 'POST',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          url: murl+'api.php?apicall=a_services',\n          data: mData,\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n      .then((response) => {\n         const results = response.data\n         const myData = response.data.data\n        // console.log(\"response: \"+JSON.stringify(response));\n        console.log(\"response1: \"+ JSON.stringify(myData));\n        \n        if(results.val==2){\n          console.log(myData)\n            this.products = myData.map(post => ({\n            \n          id: post.sid,\n          name: post.head,\n          description: post.description,\n          // images: post.pro.img,\n          // type: post.pro.type,\n          // price: post.pro.price,\n          // im: post.im\n          // created_at: post.name,\n          // updated_at: post.name\n         \n        }))\n        }\n       \n\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(\"error\"+response)\n      });\n\n    \n    },\n  },\n  mounted() {\n    this.fetchNews()\n  },\n\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n.card .card-body{\n    padding: 0px;\n   max-width: 840px;\n   width:98%;\n  margin-left:auto;\n  margin-right:auto;\n}\n\n    \n</style>"],"sourceRoot":"src/views/services"}]}