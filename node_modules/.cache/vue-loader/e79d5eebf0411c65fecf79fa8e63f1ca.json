{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\contact_us.vue?vue&type=style&index=0&id=6fa3ea37&lang=scss&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\contact_us.vue","mtime":1633786084561},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ0bi1kZWZhdWx0IHsKICBtYXJnaW4tbGVmdDogNTAlOwogIG1hcmdpbi1yaWdodDo1MCU7CiBjb2xvcjojZTllY2VmOwogYmFja2dyb3VuZC1jb2xvcjojMGMwZjI0ICFpbXBvcnRhbnQKfQouY2FyZCAuY2FyZC1ib2R5ewogICAgcGFkZGluZzogMHB4Owp9CiAgLm1kLXByb2dyZXNzLWJhciB7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICBoZWlnaHQ6N3B4OwogICAgdG9wOiA0OHB4OwogICAgcmlnaHQ6IDA7CiAgICBsZWZ0OiAwOwogICAgei1pbmRleDogMzsKICB9CiAgIC5jYXJkIHsKICAgICAgICBtYXgtd2lkdGg6IDQwMHB4OwogICAgICAgIHdpZHRoOjgwJTsKICAgICAgICBtYXJnaW4tbGVmdDphdXRvOwogICAgICAKICAgICAgbWFyZ2luLXJpZ2h0OmF1dG87CiAgICB9CiAgICAkYzE6IHJnYigxNjcsIDIwMiwgMTY0KTsKICAgICRjMjogICMwMDE1Mjk7CiAgICAkYzM6ICAgcmdiYSgwLCAwLCAwLCAwLjg3KSA7CiAgICAkYzQ6ICByZ2JhKDAsIDAsIDAsIDAuODcpOwogICAgLm1Ub3B7CiAgICAgICAgLyogbWFyZ2luLXRvcDogNzNweDsgKi8KICAgICAgICAvLyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMzM3ZGVnLCRjMSAxNSUsICAkYzQgNCUpOwogICAgICAgIC8vIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkYzIsJGMzKTsKICAgICAgICAvLyBtYXJnaW4tdG9wOiAtMjMlOwogICAgICAgIC8vIHBhZGRpbmctdG9wOiAzMCU7CiAgICB9CiAgICAgICAgdWwuYW50LW1lbnUtaW5saW5lLWNvbGxhcHNlZCB7CiAgICB3aWR0aDogOHB4OwoKICAgIH0KICAgICAgICAKICAgIGxpLmFudC1tZW51LWl0ZW17CiAgICAgICAgcGFkZGluZzogMXB4OwogICAgfQo="},{"version":3,"sources":["contact_us.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","file":"contact_us.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mTopu\" style=\"max-width: 800px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 50px;\n    width: 90%;\">\n      \n      <!-- <div style=\"background-color:#001529;height:63px;margin-top:-50px;\" ></div> -->\n <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\n  <mdb-card style=\"width:99%;max-width:1200px;margin-bottom:3%;padding-top:42px;padding-bottom:42px;margin-top; \" >\n    <mdb-card-body>\n          <!-- <mdb-datatable-2 striped bordered small hover responsive fixedHeader\n      arrows maxHeight=\"400px\" v-model=\"data\" /> -->\n      \n    <form novalidate style=\"\n    margin-left: auto;\n    margin-right: auto;z-index:0;\n    justify-content: space-around;\" class=\"md-layout\" @submit.prevent=\"validateUser\">\n      <md-card class=\"md-layout-item md-size-50 md-small-size-100\">\n        <md-card-header>\n          <div class=\"md-title\">Products</div>\n        </md-card-header>\n\n        <md-card-content>\n          <div class=\"md-layout md-gutter\">\n             \n\n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('firstName')\">\n                <label for=\"first-name\">Name</label>\n                <md-input name=\"first-name\" id=\"first-name\" autocomplete=\"given-name\" v-model=\"form.firstName\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.firstName.required\">The first name is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.firstName.minlength\">Invalid name</span>\n              </md-field>\n            </div>\n\n    \n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('age')\">\n                <label for=\"age\">Phone numebr</label>\n                <md-input type=\"number\" id=\"age\" name=\"age\" autocomplete=\"age\" v-model=\"form.age\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.age.required\">The Price is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.age.maxlength\">Invalid Price</span>\n              </md-field>\n            </div>\n          </div>\n\n          <md-field :class=\"getValidationClass('email')\">\n            <label for=\"email\">Email</label>\n            \n             <md-input autocomplete=\"email\" type=\"email\" v-model=\"form.email\" :disabled=\"sending\" />\n            <span class=\"md-error\" v-if=\"!$v.form.email.required\">A valid email is required</span>\n            <span class=\"md-error\" v-else-if=\"!$v.form.email.email\">Invalid email</span>\n          </md-field>\n        </md-card-content>\n\n       \n<div style=\"margin-left:auto;margin-right:auto;\">\n          <mdb-btn @click=\"reload\" style=\"\">Refresh</mdb-btn>\n</div>\n\n        <md-card-actions>\n          <md-button type=\"submit\" class=\"md-primary\" :disabled=\"sending\">Send Inquery</md-button>\n        </md-card-actions>\n      </md-card>\n\n      <md-snackbar :md-active.sync=\"userSaved\">The Product {{ lastUser }} was saved with success!</md-snackbar>\n     \n    </form>\n    \n    </mdb-card-body>\n  </mdb-card>\n  </div>\n</template>\n\n<script>\n  import {  mdbCard, mdbCardBody, mdbBtn } from 'mdbvue';\n  \n  import { validationMixin } from 'vuelidate';\n  import {\n    required,\n    email,\n    minLength,\n    maxLength\n  } from 'vuelidate/lib/validators'\n\nconst axios = require('axios');\n  export default {\n      components: {\n        mdbBtn,\n        // UploadImages,\n        mdbCard,\n        mdbCardBody,\n        // mdbIcon,\n        // mdbDatatable2 \n      },\n    name: 'Upload',\n    mixins: [validationMixin],\n    data: () => ({\n      top: 50,\n        collapsed: true,\n       data: {\n          \n        \n        },\n      form: {\n        firstName: null,\n        lastName: null,\n        gender: null,\n        age: null,\n        email: null,\n        file:null\n      },\n      userSaved: false,\n      sending: false,\n      lastUser: null\n    }),\n    validations: {\n      form: {\n        firstName: {\n          required,\n          minLength: minLength(3)\n        },\n        lastName: {\n          required,\n          minLength: minLength(3)\n        },\n        age: {\n          required,\n          maxLength: maxLength(10)\n        },\n        gender: {\n          required\n        },\n        email: {\n          // required,\n          email\n        }\n      }\n    },\n    methods: {\n        onCollapse(collapsed, type) {\n      console.log(collapsed, type);\n    },\n    onBreakpoint(broken) {\n      console.log(broken);\n    },\n   toggleCollapsed() {\n      this.collapsed = !this.collapsed;\n      // alert( this.collapsed );\n    },\n         handleImages(files){\n          //  alert(\"foo\"+files[0].name);\n                console.log(files)\n                this.files=files;\n\n                /*\n                  [\n                    {\n                        \"name\": \"Screenshot from 2021-02-23 12-36-33.png\",\n                        \"size\": 319775,\n                        \"type\": \"image/png\",\n                        \"lastModified\": 1614080193596\n                        ...\n                    },\n                    ...\n                    ]\n                 */\n            },\n      getValidationClass (fieldName) {\n        const field = this.$v.form[fieldName]\n\n        if (field) {\n          return {\n            'md-invalid': field.$invalid && field.$dirty\n          }\n        }\n      },\n      clearForm () {\n        this.$v.$reset()\n        this.form.firstName = null\n        this.form.lastName = null\n        this.form.age = null\n        this.form.gender = null\n        this.form.email = null\n      },\n      saveUser () {\n        this.sending = true\n        var murl=this.$store.state.mUrl;\n        var form_data = new FormData();\n\n      // form_data.append(\"file[]\", this.files);\n      for( var i = 0; i < this.files.length; i++ ){\n      let file = this.files[i];\n      console.log(file);\n      form_data.append('files[' + i + ']', file);\n    }\n      form_data.append('nm',this.form.firstName);\n      form_data.append('desc',this.form.lastName);\n      form_data.append('type',this.form.gender);\n      form_data.append('am',this.form.age);\n\n      console.log(\"f1: \"+form_data.get(\"file[]\"));\n      console.log(\"form_data: \"+JSON.stringify(this.files));\n       for (var pair of form_data.entries()){\n        console.log(pair[0]+', '+pair[1]);\n      }\n      \n      axios({\n          method: 'POST',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          url: murl+'api.php?apicall=a_up',\n          data: form_data,\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n      .then((response) => {\n        console.log(\"response: \"+response);\n        console.log(\"response1: \"+ JSON.stringify(response.data));\n       \n\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(\"error\"+response)\n      });\n        // Instead of this timeout, here you can call your API\n        window.setTimeout(() => {\n          this.lastUser = `${this.form.firstName} ${this.form.lastName}`\n          this.userSaved = true\n          this.sending = false\n          // this.clearForm()\n        }, 1500)\n      },\n      validateUser () {\n        this.$v.$touch()\n\n        if (!this.$v.$invalid) {\n          this.saveUser()\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n.btn-default {\n  margin-left: 50%;\n  margin-right:50%;\n color:#e9ecef;\n background-color:#0c0f24 !important\n}\n.card .card-body{\n    padding: 0px;\n}\n  .md-progress-bar {\n    position: fixed;\n    height:7px;\n    top: 48px;\n    right: 0;\n    left: 0;\n    z-index: 3;\n  }\n   .card {\n        max-width: 400px;\n        width:80%;\n        margin-left:auto;\n      \n      margin-right:auto;\n    }\n    $c1: rgb(167, 202, 164);\n    $c2:  #001529;\n    $c3:   rgba(0, 0, 0, 0.87) ;\n    $c4:  rgba(0, 0, 0, 0.87);\n    .mTop{\n        /* margin-top: 73px; */\n        // background: linear-gradient(337deg,$c1 15%,  $c4 4%);\n        // background: linear-gradient($c2,$c3);\n        // margin-top: -23%;\n        // padding-top: 30%;\n    }\n        ul.ant-menu-inline-collapsed {\n    width: 8px;\n\n    }\n        \n    li.ant-menu-item{\n        padding: 1px;\n    }\n</style>"]}]}