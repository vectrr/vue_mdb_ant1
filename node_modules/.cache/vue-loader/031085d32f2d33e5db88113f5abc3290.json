{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\cart\\cart.vue?vue&type=style&index=0&id=7bd5ec85&scoped=true&lang=css&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\cart\\cart.vue","mtime":1635081322824},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIC5tRGl2ewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgcGFkZGluZy10b3A6IDNweDsKICAgIHBhZGRpbmctbGVmdDogM3B4OwogfQoubWQtZm9ybSB7CiAgCiAgICAvKiBib3JkZXItcmFkaXVzOiAzMHB4OyAqLwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCn0KLmFudC1hZmZpeHsKICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2IoMCAwIDAgLyAxNiUpLCAwIDJweCAxMHB4IDAgcmdiKDAgMCAwIC8gMTIlKSA7Cn0KCg=="},{"version":3,"sources":["cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"cart.vue","sourceRoot":"src/views/cart","sourcesContent":["<template>\r\n  <Layout>\r\n    \r\n   <div style=\"margin-top: -15px; overflow-x: ;\">\r\n       <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\r\n       <mdb-edge-header color=\"\" style=\"background-color: #080e35 \">\r\n        <div class=\"home-page-background\"></div>\r\n      </mdb-edge-header>\r\n          \r\n     </div>\r\n         <md-card class=\"md-small-size-100\" style=\"margin-left: auto;\r\n    margin-right: auto;width:99%;max-width:1100px;box-shadow: 0px 8px 22px #00000036;\">\r\n\r\n\r\n       \r\n          <mlist :posts=\"products\" :key=\"list_key\"  @reload=\"reload\" :cid=\"cid\" />\r\n        <upload :cid=\"cid\" />\r\n         </md-card>\r\n    \r\n   \r\n   \r\n  </Layout>\r\n</template>\r\n\r\n<script>\r\nimport upload from \"./upload.vue\"\r\n// import upload from \"../contact/form.vue\"\r\nimport mlist from \"./list.vue\"\r\nimport axios from \"axios\"\r\nimport {  mdbEdgeHeader,  } from 'mdbvue';\r\n// import data from \"./posts.json\"\r\n\r\nexport default {\r\n  components: {\r\n    // Layout,\r\n    // NewsFilter,\r\n    upload,\r\n    mlist,\r\n    // mdbContainer,\r\n    // mdbCol,\r\n    // mdbRow,\r\n    mdbEdgeHeader,\r\n    // mdbInput,\r\n    // mdbCardBody\r\n  },\r\n  \r\n\r\n  props: ['cid'],\r\n  data() {\r\n    return {\r\n       top:30,\r\n       top1:50,\r\n      products: [],\r\n      sending: false, \r\n       list_key:0,\r\n       p:null,\r\n    }\r\n  },\r\n  methods: {\r\n    \r\n    mSearchitem(id){\r\n     \r\n        this.sending = true\r\n        var murl=this.$store.state.mUrl;\r\n    \r\n          const article = { \r\n              cid:id \r\n          };\r\n          \r\n      console.log(\"form_data: \"+JSON.stringify(article));\r\n      axios({\r\n          method: 'POST',\r\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\r\n          url: murl+'api.php?apicall=s_cart',\r\n          data: article,\r\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n      })\r\n      .then((response) => {\r\n        this.sending = false\r\n        // console.log(\"response: \"+ JSON.stringify(response));\r\n        console.log(\"response2: \"+ JSON.stringify(response.data.d.p));\r\n       \r\n    if(response.data.val==1){ \r\n            // this.emsg = response.data.message;\r\n            this.p=response.data.d.p;\r\n              this.fetchNews();\r\n           \r\n          }\r\n      })\r\n      .catch(function (response) {\r\n          //handle error\r\n          console.log(\"error\"+response)\r\n      });\r\n        // Instead of this timeout, here you can call your API\r\n      //  this.sending = false\r\n    },\r\n       reload(){\r\n      console.log(\"reloading...\");\r\n      // this.list_key=this.list_key+1;\r\n       this.refresh();\r\n          \r\n      \r\n        this.products=[];\r\n        setTimeout(() => this.fetchNews(),this.$parent.add2cart(), 500);\r\n       \r\n    },\r\n      refresh(){\r\n      console.log(\"refreshing...\");\r\n      this.list_key=this.list_key+1;\r\n    },\r\n    // Helper function for extracting a nested image object\r\n   onCollapse(collapsed, type) {\r\n      console.log(collapsed, type);\r\n    },\r\n    onBreakpoint(broken) {\r\n      console.log(broken);\r\n    },\r\n     fetchNews() {\r\n       const p=this.p;\r\n        console.log(\"p....\"+p);\r\n        this.sending=true;\r\n        var murl=this.$store.state.mUrl;\r\n    \r\n        var mCarray=[];\r\n    \r\n      if(this.$cookies.isKey(\"mp\")||p!=null){\r\n          // mp=this.$cookies.get(\"mp\");\r\n          if(p!=null){\r\n            mCarray=JSON.parse(p);\r\n          }else{\r\n\r\n           mCarray=JSON.parse(this.$cookies.get(\"mp\"))\r\n          }\r\n            console.log(\"m= \"+mCarray);\r\n     \r\n        const mData = { \r\n          mc:mCarray,\r\n        }; \r\n        axios({\r\n          method: 'POST',\r\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\r\n          url: murl+'api.php?apicall=a_cart',\r\n          data: mData,\r\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n      })\r\n      .then((response) => {\r\n         const results = response.data\r\n         const myData = response.data.data\r\n        // console.log(\"response: \"+JSON.stringify(response));\r\n        console.log(\"response1: \"+ JSON.stringify(myData));\r\n        \r\n        if(results.val==2){\r\n          console.log(myData)\r\n            this.products = myData.map(post => ({\r\n            \r\n          id: post.pro.pid,\r\n          name: post.pro.name,\r\n          images: post.pro.img,\r\n          description: post.pro.description,\r\n          type: post.pro.type,\r\n          price: post.pro.price,\r\n          im: post.im\r\n          // created_at: post.name,\r\n          // updated_at: post.name\r\n         \r\n        }))\r\n        }\r\n       this.sending=false;\r\n\r\n      })\r\n      .catch(function (response) {\r\n        this.sending=false;\r\n          //handle error\r\n          console.log(\"error\"+response)\r\n      });\r\n  }  \r\n    },\r\n  },\r\n  mounted() {\r\n  \r\n    if(this.cid!=\"\" && this.cid!=undefined){\r\n      console.log(\"url ok=\"+this.cid)\r\n      this.mSearchitem(this.cid);\r\n    }else{\r\n      \r\n    this.fetchNews()\r\n      console.log(\"url not ok\")\r\n    }\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n .mDiv{\r\n    background-color: #fff;\r\n   padding-top: 3px;\r\n    padding-left: 3px;\r\n }\r\n.md-form {\r\n  \r\n    /* border-radius: 30px; */\r\n    background-color: #fff;\r\n\r\n}\r\n.ant-affix{\r\n  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%) ;\r\n}\r\n\r\n</style>"]}]}