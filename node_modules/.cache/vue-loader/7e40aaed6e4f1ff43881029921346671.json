{"remainingRequest":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp2\\htdocs\\w\\m\\src\\views\\admin\\login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp2\\htdocs\\w\\m\\src\\views\\admin\\login.vue","mtime":1632125331299},{"path":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\css-loader\\dist\\cjs.js","mtime":1632121225922},{"path":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1632121257598},{"path":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\postcss-loader\\src\\index.js","mtime":1632121247322},{"path":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632121223066},{"path":"C:\\xampp2\\htdocs\\w\\m\\node_modules\\vue-loader\\lib\\index.js","mtime":1632121257597}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmd6IHsKICBtYXJnaW4tdG9wOiAtMTAycHg7CiAgIHBhZGRpbmctdG9wOiAxMDBweDsKICAgcGFkZGluZy1ib3R0b206IDEwMHB4OwogICAvKiBUaGUgaW1hZ2UgdXNlZCAqLwogICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uLy4uL2Fzc2V0cy9pbWcvY3VydmVkLWltYWdlcy9jdXJ2ZWQuanBnIik7CiAgIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vYXNzZXRzL2ltZy8zLmpwZyIpOyAqLwoKICAgLyogRnVsbCBoZWlnaHQgKi8KICAgaGVpZ2h0OiAxMDAlOwoKICAgLyogQ2VudGVyIGFuZCBzY2FsZSB0aGUgaW1hZ2UgbmljZWx5ICovCiAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsKIH0KICAgLmNhcmQgewogICAgICAgbWF4LXdpZHRoOiA0MDBweDsKICAgICAgIHdpZHRoOjgwJTsKICAgICAgIG1hcmdpbi1sZWZ0OmF1dG87CiAgICAgICBtYXJnaW4tcmlnaHQ6YXV0bzsKICAgfQogICAubVRvcDF7CiAgICAgICBtYXJnaW4tdG9wOiA5M3B4OwogICB9CiAgIC5tUm93IHsKICAgICAgIG1heC13aWR0aDogODc1cHg7CiAgIH0K"},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n<div class=\" bgz\">\r\n  <!-- Card -->\r\n  <mdb-card class=\"mTop1\">\r\n    <mdb-card-body>\r\n      <!-- <a-form layout=\"inline\" :form=\"form\" @submit=\"handleSubmit\">\r\n    <a-form-item :validate-status=\"userNameError() ? 'error' : ''\" :help=\"userNameError() || ''\">\r\n      <a-input\r\n        v-decorator=\"[\r\n          'userName',\r\n          { rules: [{ required: true, message: 'Please input your username!' }] },\r\n        ]\"\r\n        placeholder=\"Username\"\r\n      >\r\n        <a-icon slot=\"prefix\" type=\"user\" style=\"color:rgba(0,0,0,.25)\" />\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item :validate-status=\"passwordError() ? 'error' : ''\" :help=\"passwordError() || ''\">\r\n      <a-input\r\n        v-decorator=\"[\r\n          'password',\r\n          { rules: [{ required: true, message: 'Please input your Password!' }] },\r\n        ]\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n         icon=\"lock\"\r\n      >\r\n        <a-icon slot=\"prefix\" type=\"lock\" style=\"color:rgba(0,0,0,.25)\" />\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item>\r\n      <mdb-btn type=\"primary\" html-type=\"submit\" :disabled=\"hasErrors(form.getFieldsError())\">\r\n        Log in\r\n      </mdb-btn>\r\n    </a-form-item>\r\n  </a-form> -->\r\n      <form @submit=\"handleSubmit\">\r\n        <p class=\"h4 text-center py-4\">Sign up</p>\r\n        <div class=\"grey-text\">\r\n        \r\n          <mdb-input label=\"Your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" @input=\"hEmail\"/>\r\n     \r\n          <mdb-input label=\"Your password\" icon=\"lock\" group type=\"password\" validate @input=\"hPass\"/>\r\n        </div>\r\n        <div class=\"text-center py-4 mt-3\">\r\n          <mdb-btn color=\"cyan\" type=\"submit\">Login</mdb-btn>\r\n        </div>\r\n      </form>\r\n<imd src=\"../../s/s1/api.php\"/>\r\n      \r\n    </mdb-card-body>\r\n  </mdb-card>\r\n  <!-- Card -->\r\n</div>\r\n</template>\r\n<script>\r\n  import { mdbInput, mdbBtn, mdbCard, mdbCardBody } from 'mdbvue';\r\n  const axios = require('axios');\r\n  \r\n\r\n  function hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n  export default {\r\n    name: 'Basic',\r\n    components: {\r\n      mdbInput,\r\n      mdbBtn,\r\n      mdbCard,\r\n      mdbCardBody\r\n    },\r\n    \r\n  data() {\r\n    return {\r\n      hasErrors,\r\n      form: this.$form.createForm(this, { name: 'horizontal_login' }),\r\n      pass:\"empty\",\r\n      email:\"empty\"\r\n    };\r\n  },\r\n  mounted() {\r\n    \r\n    this.$nextTick(() => {\r\n      // To disabled submit button at the beginning.\r\n      this.form.validateFields();\r\n    });\r\n  },\r\n  methods: {\r\n    // Only show error after a field is touched.\r\n    userNameError() {\r\n      const { getFieldError, isFieldTouched } = this.form;\r\n      return isFieldTouched('userName') && getFieldError('userName');\r\n    },\r\n    // Only show error after a field is touched.\r\n    passwordError() {\r\n      const { getFieldError, isFieldTouched } = this.form;\r\n      return isFieldTouched('password') && getFieldError('password');\r\n    },\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const form_data = new FormData();\r\n       form_data.append('email',this.email);\r\n       form_data.append('pass',this.pass);\r\n      console.log(this.pass);\r\n const article = { \r\n    email:this.email ,\r\n    pass:this.pass\r\n };\r\n      \r\nvar murl=this.$store.state.mUrl;\r\n// alert(murl);\r\n        axios({\r\n          method: 'POST',\r\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\r\n          url: murl+'api.php?apicall=admin_l',\r\n          data: article,\r\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n      })\r\n      .then((response) => {\r\n        console.log(\"response: \"+response);\r\n        console.log(\"response1: \"+ JSON.stringify(response.data));\r\n        // console.log(\"response2: \"+response.data);\r\n        if(response.data.val==22 & !response.data.error){\r\n          \r\n          // var key=this.$store.state.mKey;\r\n          // var cName = this.$Dcrypt.encrypt(\"response.data.name\",  \"key\");\r\n          // var cId = this.$Dcrypt.encrypt(response.data.id,  key);\r\n          var cName=response.data.name;\r\n          var cId=response.data.id\r\n          this.$cookies.set(\"admin\",cName,\"22min\");\r\n          this.$cookies.set(\"id\",cId,\"22min\");\r\n          this.$router.push('/Products');\r\n          \r\n\r\n          // this.$cookies.remove(\"id\" ) \r\n        }\r\n\r\n\r\n      })\r\n      .catch(function (response) {\r\n          //handle error\r\n          console.log(\"error\"+response)\r\n      });\r\n\r\n// const article = { email: \"Vue POST Request Example\" };\r\n// const headers={'Content-Type': 'multipart/form-data'}\r\n//   axios.post(\"http://localhost/w/15minutes/api.php?Regd_ID=admin_l\", article,headers)\r\n//     .then((response) => { \r\n//         console.log(\"response: \"+response);\r\n//         console.log(\"response1: \"+ JSON.stringify(response));\r\n//         console.log(\"response2: \"+response.data.message);\r\n//     })\r\n//     .catch(error => {\r\n//       this.errorMessage = error.message;\r\n//       console.error(\"There was an error!\", error);\r\n//     });\r\n\r\n    },\r\n    hEmail (val) {\r\n     this.email=val\r\n    // console.log(val);\r\n    },\r\n    hPass (val) {\r\n      this.pass=val\r\n    // console.log(val);\r\n    }\r\n  },\r\n  \r\n  }\r\n</script>\r\n\r\n\r\n<style>\r\n .bgz {\r\n   margin-top: -102px;\r\n    padding-top: 100px;\r\n    padding-bottom: 100px;\r\n    /* The image used */\r\n    background-image: url(\"../../assets/img/curved-images/curved.jpg\");\r\n    /* background-image: url(\"../assets/img/3.jpg\"); */\r\n\r\n    /* Full height */\r\n    height: 100%;\r\n\r\n    /* Center and scale the image nicely */\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n    .card {\r\n        max-width: 400px;\r\n        width:80%;\r\n        margin-left:auto;\r\n        margin-right:auto;\r\n    }\r\n    .mTop1{\r\n        margin-top: 93px;\r\n    }\r\n    .mRow {\r\n        max-width: 875px;\r\n    }\r\n</style>"]}]}