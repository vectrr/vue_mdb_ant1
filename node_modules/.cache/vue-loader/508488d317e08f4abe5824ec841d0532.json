{"remainingRequest":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\src\\views\\admin\\login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\src\\views\\admin\\login.vue","mtime":1630164452102},{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\w\\vue\\New folder\\vue2-main-forefront-Test_2\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJkIHsKICAgIG1heC13aWR0aDogNDAwcHg7CiAgICB3aWR0aDo4MCU7CiAgICBtYXJnaW4tbGVmdDphdXRvOwogICAgbWFyZ2luLXJpZ2h0OmF1dG87Cn0KLm1Ub3B7CiAgICBtYXJnaW4tdG9wOiA3M3B4Owp9Ci5tUm93IHsKICAgIG1heC13aWR0aDogODc1cHg7Cn0K"},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <!-- Card -->\n  <mdb-card class=\"mTop\">\n    <mdb-card-body>\n      <!-- <a-form layout=\"inline\" :form=\"form\" @submit=\"handleSubmit\">\n    <a-form-item :validate-status=\"userNameError() ? 'error' : ''\" :help=\"userNameError() || ''\">\n      <a-input\n        v-decorator=\"[\n          'userName',\n          { rules: [{ required: true, message: 'Please input your username!' }] },\n        ]\"\n        placeholder=\"Username\"\n      >\n        <a-icon slot=\"prefix\" type=\"user\" style=\"color:rgba(0,0,0,.25)\" />\n      </a-input>\n    </a-form-item>\n    <a-form-item :validate-status=\"passwordError() ? 'error' : ''\" :help=\"passwordError() || ''\">\n      <a-input\n        v-decorator=\"[\n          'password',\n          { rules: [{ required: true, message: 'Please input your Password!' }] },\n        ]\"\n        type=\"password\"\n        placeholder=\"Password\"\n         icon=\"lock\"\n      >\n        <a-icon slot=\"prefix\" type=\"lock\" style=\"color:rgba(0,0,0,.25)\" />\n      </a-input>\n    </a-form-item>\n    <a-form-item>\n      <mdb-btn type=\"primary\" html-type=\"submit\" :disabled=\"hasErrors(form.getFieldsError())\">\n        Log in\n      </mdb-btn>\n    </a-form-item>\n  </a-form> -->\n      <form @submit=\"handleSubmit\">\n        <p class=\"h4 text-center py-4\">Sign up</p>\n        <div class=\"grey-text\">\n        \n          <mdb-input label=\"Your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" @input=\"hEmail\"/>\n     \n          <mdb-input label=\"Your password\" icon=\"lock\" group type=\"password\" validate @input=\"hPass\"/>\n        </div>\n        <div class=\"text-center py-4 mt-3\">\n          <mdb-btn color=\"cyan\" type=\"submit\">Register</mdb-btn>\n        </div>\n      </form>\n\n      \n    </mdb-card-body>\n  </mdb-card>\n  <!-- Card -->\n</template>\n<script>\n  import { mdbInput, mdbBtn, mdbCard, mdbCardBody } from 'mdbvue';\n  const axios = require('axios');\n  \n\n  function hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n  export default {\n    name: 'Basic',\n    components: {\n      mdbInput,\n      mdbBtn,\n      mdbCard,\n      mdbCardBody\n    },\n    \n  data() {\n    return {\n      hasErrors,\n      form: this.$form.createForm(this, { name: 'horizontal_login' }),\n      pass:\"empty\",\n      email:\"empty\"\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      // To disabled submit button at the beginning.\n      this.form.validateFields();\n    });\n  },\n  methods: {\n    // Only show error after a field is touched.\n    userNameError() {\n      const { getFieldError, isFieldTouched } = this.form;\n      return isFieldTouched('userName') && getFieldError('userName');\n    },\n    // Only show error after a field is touched.\n    passwordError() {\n      const { getFieldError, isFieldTouched } = this.form;\n      return isFieldTouched('password') && getFieldError('password');\n    },\n    handleSubmit(e) {\n      e.preventDefault();\n      const form_data = new FormData();\n       form_data.append('email',this.email);\n       form_data.append('pass',this.pass);\n      console.log(this.pass);\n const article = { \n    email:this.email ,\n    pass:this.pass\n };\n      \n\n        axios({\n          method: 'POST',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          url: 'http://localhost/w/15minutes/api.php?apicall=admin_l',\n          data: article,\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n      .then((response) => {\n        console.log(\"response: \"+response);\n        console.log(\"response1: \"+ JSON.stringify(response.data));\n        // console.log(\"response2: \"+response.data);\n        if(response.data.val==22 & !response.data.error){\n          this.$cookies.set(\"admin\",response.data.name,\"22min\");\n          this.$cookies.set(\"id\",response.data.id,\"22min\");\n          // this.$cookies.remove(\"id\" ) \n        }\n\n\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(\"error\"+response)\n      });\n\n// const article = { email: \"Vue POST Request Example\" };\n// const headers={'Content-Type': 'multipart/form-data'}\n//   axios.post(\"http://localhost/w/15minutes/api.php?Regd_ID=admin_l\", article,headers)\n//     .then((response) => { \n//         console.log(\"response: \"+response);\n//         console.log(\"response1: \"+ JSON.stringify(response));\n//         console.log(\"response2: \"+response.data.message);\n//     })\n//     .catch(error => {\n//       this.errorMessage = error.message;\n//       console.error(\"There was an error!\", error);\n//     });\n\n    },\n    hEmail (val) {\n     this.email=val\n    // console.log(val);\n    },\n    hPass (val) {\n      this.pass=val\n    // console.log(val);\n    }\n  },\n  \n  }\n</script>\n\n\n<style>\n    .card {\n        max-width: 400px;\n        width:80%;\n        margin-left:auto;\n        margin-right:auto;\n    }\n    .mTop{\n        margin-top: 73px;\n    }\n    .mRow {\n        max-width: 875px;\n    }\n</style>"]}]}