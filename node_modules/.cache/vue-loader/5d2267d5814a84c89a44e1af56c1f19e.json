{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\admin\\motocycles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\admin\\motocycles.vue","mtime":1632070172406},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWxpc3QgZnJvbSAiLi9saXN0LnZ1ZSINCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyINCmltcG9ydCB7IG1kYkNvbnRhaW5lciwgbWRiQ29sLCBtZGJSb3csICBtZGJFZGdlSGVhZGVyLCAgbWRiQ2FyZEJvZHkgfSBmcm9tICdtZGJ2dWUnOw0KLy8gaW1wb3J0IGRhdGEgZnJvbSAiLi9wb3N0cy5qc29uIg0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICAvLyBMYXlvdXQsDQogICAgLy8gTmV3c0ZpbHRlciwNCiAgICBtbGlzdCwNCiAgICBtZGJDb250YWluZXIsDQogICAgbWRiQ29sLA0KICAgIG1kYlJvdywNCiAgICBtZGJFZGdlSGVhZGVyLA0KICAgIA0KICAgIG1kYkNhcmRCb2R5DQogIH0sDQogIA0KDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHByb2R1Y3RzOiBbXSwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyBIZWxwZXIgZnVuY3Rpb24gZm9yIGV4dHJhY3RpbmcgYSBuZXN0ZWQgaW1hZ2Ugb2JqZWN0DQogICANCiAgICBhc3luYyBmZXRjaE5ld3MoKSB7DQoNCiAgICAgICAgdmFyIG11cmw9dGhpcy4kc3RvcmUuc3RhdGUubVVybDsNCiAgICAgICBjb25zdCBtRGF0YSA9IHsgDQogICAgbm06InBldGVyIiAsDQogICAgLy8gcGFzczp0aGlzLnBhc3MNCiB9Ow0KICAgIA0KYXhpb3Moew0KICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLA0KICAgICAgICAgIC8vIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3QvbncvdmFwL3JlZ0FwaS5waHA/YXBpY2FsbD1zaWdudXAnDQogICAgICAgICAgdXJsOiBtdXJsKydhcGkucGhwP2FwaWNhbGw9YV9tJywNCiAgICAgICAgICBkYXRhOiBtRGF0YSwNCiAgICAgICAgICBjb25maWc6IHsgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScgfX0NCiAgICAgIH0pDQogICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSByZXNwb25zZS5kYXRhDQogICAgICAgICBjb25zdCBteURhdGEgPSByZXNwb25zZS5kYXRhLmRhdGENCiAgICAgICAgLy8gY29uc29sZS5sb2coInJlc3BvbnNlOiAiK0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7DQogICAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZTE6ICIrIEpTT04uc3RyaW5naWZ5KG15RGF0YSkpOw0KICAgICAgICANCiAgICAgICAgaWYocmVzdWx0cy52YWw9PTIpew0KICAgICAgICAgIGNvbnNvbGUubG9nKG15RGF0YSkNCiAgICAgICAgICAgIHRoaXMucHJvZHVjdHMgPSBteURhdGEubWFwKHBvc3QgPT4gKHsNCiAgICAgICAgICAgIA0KICAgICAgICAgIGlkOiBwb3N0LnByby5waWQsDQogICAgICAgICAgbmFtZTogcG9zdC5wcm8ubmFtZSwNCiAgICAgICAgICBpbWFnZXM6IHBvc3QucHJvLmltZywNCiAgICAgICAgICBkZXNjcmlwdGlvbjogcG9zdC5wcm8uZGVzY3JpcHRpb24sDQogICAgICAgICAgdHlwZTogcG9zdC5wcm8udHlwZSwNCiAgICAgICAgICBwcmljZTogcG9zdC5wcm8ucHJpY2UsDQogICAgICAgICAgaW06IHBvc3QuaW0NCiAgICAgICAgICAvLyBjcmVhdGVkX2F0OiBwb3N0Lm5hbWUsDQogICAgICAgICAgLy8gdXBkYXRlZF9hdDogcG9zdC5uYW1lDQogICAgICAgICANCiAgICAgICAgfSkpDQogICAgICAgIH0NCiAgICAgICANCg0KICAgICAgfSkNCiAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHsNCiAgICAgICAgICAvL2hhbmRsZSBlcnJvcg0KICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciIrcmVzcG9uc2UpDQogICAgICB9KTsNCg0KICAgICAgLy8gdHJ5IHsNCiAgICAgIC8vICAgY29uc3QgdXJsID0gImh0dHBzOi8vdGktcmVhY3QtdGVzdC5oZXJva3VhcHAuY29tL3VzZXJzIg0KICAgICAgLy8gICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCh1cmwpDQogICAgICAvLyAgICAgY29uc29sZS5sb2coIlNlcnZlciBFcnJvcjoiLCByZXNwb25zZS5kYXRhKQ0KICAgICAgLy8gICBjb25zdCByZXN1bHRzID0gcmVzcG9uc2UuZGF0YQ0KICAgICAgLy8gICB0aGlzLnBvc3RzID0gcmVzdWx0cy5tYXAocG9zdCA9PiAoew0KICAgICAgLy8gICAgIGlkOiBwb3N0LmlkLA0KICAgICAgLy8gICAgIG5hbWU6IHBvc3QubmFtZSwNCiAgICAgIC8vICAgICBvY2N1cGF0aW9uOiBwb3N0Lm9jY3VwYXRpb24sDQogICAgICAvLyAgICAgZW1haWw6IHBvc3QuZW1haWwsDQogICAgICAvLyAgICAgYmlvOiBwb3N0LmJpbywNCiAgICAgIC8vICAgICBjcmVhdGVkX2F0OiBwb3N0LmNyZWF0ZWRfYXQsDQogICAgICAvLyAgICAgdXBkYXRlZF9hdDogcG9zdC51cGRhdGVkX2F0DQogICAgICAgICANCiAgICAgIC8vICAgfSkpDQogICAgICAvLyB9IGNhdGNoIChlcnIpIHsNCiAgICAgIC8vICAgaWYgKGVyci5yZXNwb25zZSkgew0KICAgICAgLy8gICAgIC8vIGNsaWVudCByZWNlaXZlZCBhbiBlcnJvciByZXNwb25zZSAoNXh4LCA0eHgpDQogICAgICAvLyAgICAgY29uc29sZS5sb2coIlNlcnZlciBFcnJvcjoiLCBlcnIpDQogICAgICAvLyAgIH0gZWxzZSBpZiAoZXJyLnJlcXVlc3QpIHsNCiAgICAgIC8vICAgICAvLyBjbGllbnQgbmV2ZXIgcmVjZWl2ZWQgYSByZXNwb25zZSwgb3IgcmVxdWVzdCBuZXZlciBsZWZ0DQogICAgICAvLyAgICAgY29uc29sZS5sb2coIk5ldHdvcmsgRXJyb3I6IiwgZXJyKQ0KICAgICAgLy8gICB9IGVsc2Ugew0KICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCJDbGllbnQgRXJyb3I6IiwgZXJyKQ0KICAgICAgLy8gICB9DQogICAgICAvLyB9DQogICAgfSwNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmZldGNoTmV3cygpDQogIH0sDQoNCn0NCg=="},{"version":3,"sources":["motocycles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"motocycles.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <Layout>\r\n    <div style=\"margin-top: -15px; overflow-x: ;\">\r\n       <!-- <mdb-edge-header color=\"teal darken-2\">\r\n        <div class=\"home-page-background\"></div>\r\n      </mdb-edge-header> -->\r\n           \r\n    <!-- <mdb-container class=\"free-bird\">\r\n        <mdb-row>\r\n          <mdb-col md=\"10\" class=\"mx-auto white z-depth-1 py-2 px-2\">\r\n            <mdb-card-body>\r\n              <h2 class=\"pb-4\"><strong>Home page</strong></h2>\r\n              \r\n           \r\n            </mdb-card-body>\r\n          </mdb-col>\r\n        </mdb-row>\r\n      </mdb-container> -->\r\n  \r\n     </div>\r\n    <mlist :posts=\"products\" />\r\n   \r\n  </Layout>\r\n</template>\r\n\r\n<script>\r\nimport mlist from \"./list.vue\"\r\nimport axios from \"axios\"\r\nimport { mdbContainer, mdbCol, mdbRow,  mdbEdgeHeader,  mdbCardBody } from 'mdbvue';\r\n// import data from \"./posts.json\"\r\n\r\nexport default {\r\n  components: {\r\n    // Layout,\r\n    // NewsFilter,\r\n    mlist,\r\n    mdbContainer,\r\n    mdbCol,\r\n    mdbRow,\r\n    mdbEdgeHeader,\r\n    \r\n    mdbCardBody\r\n  },\r\n  \r\n\r\n  data() {\r\n    return {\r\n      products: [],\r\n    }\r\n  },\r\n  methods: {\r\n    // Helper function for extracting a nested image object\r\n   \r\n    async fetchNews() {\r\n\r\n        var murl=this.$store.state.mUrl;\r\n       const mData = { \r\n    nm:\"peter\" ,\r\n    // pass:this.pass\r\n };\r\n    \r\naxios({\r\n          method: 'POST',\r\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\r\n          url: murl+'api.php?apicall=a_m',\r\n          data: mData,\r\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n      })\r\n      .then((response) => {\r\n         const results = response.data\r\n         const myData = response.data.data\r\n        // console.log(\"response: \"+JSON.stringify(response));\r\n        console.log(\"response1: \"+ JSON.stringify(myData));\r\n        \r\n        if(results.val==2){\r\n          console.log(myData)\r\n            this.products = myData.map(post => ({\r\n            \r\n          id: post.pro.pid,\r\n          name: post.pro.name,\r\n          images: post.pro.img,\r\n          description: post.pro.description,\r\n          type: post.pro.type,\r\n          price: post.pro.price,\r\n          im: post.im\r\n          // created_at: post.name,\r\n          // updated_at: post.name\r\n         \r\n        }))\r\n        }\r\n       \r\n\r\n      })\r\n      .catch(function (response) {\r\n          //handle error\r\n          console.log(\"error\"+response)\r\n      });\r\n\r\n      // try {\r\n      //   const url = \"https://ti-react-test.herokuapp.com/users\"\r\n      //   const response = await axios.get(url)\r\n      //     console.log(\"Server Error:\", response.data)\r\n      //   const results = response.data\r\n      //   this.posts = results.map(post => ({\r\n      //     id: post.id,\r\n      //     name: post.name,\r\n      //     occupation: post.occupation,\r\n      //     email: post.email,\r\n      //     bio: post.bio,\r\n      //     created_at: post.created_at,\r\n      //     updated_at: post.updated_at\r\n         \r\n      //   }))\r\n      // } catch (err) {\r\n      //   if (err.response) {\r\n      //     // client received an error response (5xx, 4xx)\r\n      //     console.log(\"Server Error:\", err)\r\n      //   } else if (err.request) {\r\n      //     // client never received a response, or request never left\r\n      //     console.log(\"Network Error:\", err)\r\n      //   } else {\r\n      //     console.log(\"Client Error:\", err)\r\n      //   }\r\n      // }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchNews()\r\n  },\r\n\r\n}\r\n</script>"]}]}