{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\mainContent.vue?vue&type=template&id=e03c9754&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\mainContent.vue","mtime":1633237723940},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}