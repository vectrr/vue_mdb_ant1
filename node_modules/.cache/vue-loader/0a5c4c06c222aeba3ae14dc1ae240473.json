{"remainingRequest":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\contact\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\src\\views\\contact\\form.vue","mtime":1635053693786},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\w\\15\\vue_mdb_ant\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsgIG1kYkNhcmQsIG1kYkNhcmRCb2R5LCBtZGJCdG4gfSBmcm9tICdtZGJ2dWUnOwogIAovLyAgIGltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7Ci8vICAgaW1wb3J0IHsKLy8gICAgIHJlcXVpcmVkLAogCi8vICAgICBtaW5MZW5ndGgsCi8vICAgICBtYXhMZW5ndGgKLy8gICB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBtZGJCdG4sCiAgICAgICAgLy8gVXBsb2FkSW1hZ2VzLAogICAgICAgIG1kYkNhcmQsCiAgICAgICAgbWRiQ2FyZEJvZHksCiAgICAgICAgLy8gbWRiSW5wdXQsCiAgICAgICAgLy8gbWRiSWNvbiwKICAgICAgICAvLyBtZGJEYXRhdGFibGUyIAogICAgICB9LAogICAgICAKICBwcm9wczogWydjaWQnXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZmlybURpcnR5OiBmYWxzZSwKICAgICAgbURhdGE6bnVsbCwgCiAgICAgIGVycm9yOmZhbHNlLAogICAgICBlbXNnOm51bGwsCiAgICAgIC8vIHJlc2lkZW5jZXMsCiAgICAgIGF1dG9Db21wbGV0ZVJlc3VsdDogW10sCiAgICAgIGZvcm1JdGVtTGF5b3V0OiB7CiAgICAgICAgbGFiZWxDb2w6IHsKICAgICAgICAgIHhzOiB7IHNwYW46IDI0IH0sCiAgICAgICAgICBzbTogeyBzcGFuOiA4IH0sCiAgICAgICAgfSwKICAgICAgICB3cmFwcGVyQ29sOiB7CiAgICAgICAgICB4czogeyBzcGFuOiAyNCB9LAogICAgICAgICAgc206IHsgc3BhbjogMTYgfSwKICAgICAgICB9LAogICAgICB9LAogICAgICB0YWlsRm9ybUl0ZW1MYXlvdXQ6IHsKICAgICAgICB3cmFwcGVyQ29sOiB7CiAgICAgICAgICB4czogewogICAgICAgICAgICBzcGFuOiAyNCwKICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgfSwKICAgICAgICAgIHNtOiB7CiAgICAgICAgICAgIHNwYW46IDE2LAogICAgICAgICAgICBvZmZzZXQ6IDgsCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgIH0sCiAgICB9OwogIH0sCiAgYmVmb3JlQ3JlYXRlKCkgewogICAgdGhpcy5mb3JtID0gdGhpcy4kZm9ybS5jcmVhdGVGb3JtKHRoaXMsIHsgbmFtZTogJ3JlZ2lzdGVyJyB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIAogICAgICBzZW5kSW5xdWVyeSAoKSB7CiAgICAgICAgdGhpcy5zZW5kaW5nID0gdHJ1ZQogICAgICAgIHZhciBtdXJsPXRoaXMuJHN0b3JlLnN0YXRlLm1Vcmw7CiAgICAgICAgLy8gdmFyIGZvcm1fZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwoKICAgICAgLy8gY29uc29sZS5sb2coImZvcm1fZGF0YTogIit0aGlzLm1EYXRhLm5teik7CiAgICAgIAovLyBEaXNwbGF5IHRoZSBrZXkvdmFsdWUgcGFpcnMKLy8gZm9yICh2YXIgcGFpciBvZiBmb3JtX2RhdGEuZW50cmllcygpKSB7Ci8vICAgICBjb25zb2xlLmxvZyhwYWlyWzBdKyAnLCAnICsgcGFpclsxXSk7IAovLyB9CiB2YXIgbUNhcnJheT1bXTsKIGlmKHRoaXMuJGNvb2tpZXMuaXNLZXkoIm1wIikpewogICAgbUNhcnJheT1KU09OLnBhcnNlKHRoaXMuJGNvb2tpZXMuZ2V0KCJtcCIpKQogfQogY29uc3QgYXJ0aWNsZSA9IHsgCiAgICBubTp0aGlzLm1EYXRhLm5hbWUgLAogICAgcGhvbmU6dGhpcy5tRGF0YS5waG9uZSwKICAgIGVtOnRoaXMubURhdGEuZW1haWwsCiAgICBtc2c6dGhpcy5tRGF0YS5tc2csCiAgICBtQ2FycmF5Om1DYXJyYXkKIH07CiAKICAgICAgY29uc29sZS5sb2coImZvcm1fZGF0YTogIitKU09OLnN0cmluZ2lmeShhcnRpY2xlKSk7CiAgICAgIGF4aW9zKHsKICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgLy8gdXJsOiAnaHR0cDovL2xvY2FsaG9zdC9udy92YXAvcmVnQXBpLnBocD9hcGljYWxsPXNpZ251cCcKICAgICAgICAgIHVybDogbXVybCsnYXBpLnBocD9hcGljYWxsPW1haWwnLAogICAgICAgICAgZGF0YTogYXJ0aWNsZSwKICAgICAgICAgIGNvbmZpZzogeyBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJyB9fQogICAgICB9KQogICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICB0aGlzLnNlbmRpbmcgPSBmYWxzZQogICAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZTogIisgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTsKICAgICAgICAvLyBjb25zb2xlLmxvZygicmVzcG9uc2UxOiAiKyBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhKSk7CiAgICAgICAKICAgIGlmKHJlc3BvbnNlLmRhdGEuY29kZT09MSl7IAogICAgICAgICAgICB0aGlzLmVtc2cgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICAgICAgICAgIC8vICB0aGlzLmNsZWFyRm9ybTEoKTsKICAgICAgICAgICAgdGhpcy5lcnJvciA9IHRydWUKICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgfSkKICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgLy9oYW5kbGUgZXJyb3IKICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciIrcmVzcG9uc2UpCiAgICAgIH0pOwogICAgICAgIC8vIEluc3RlYWQgb2YgdGhpcyB0aW1lb3V0LCBoZXJlIHlvdSBjYW4gY2FsbCB5b3VyIEFQSQogICAgICAvLyAgdGhpcy5zZW5kaW5nID0gZmFsc2UKICAgICAgfSwKICAgIGhhbmRsZVN1Ym1pdChlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKCiAgICAgIHRoaXMuZm9ybS52YWxpZGF0ZUZpZWxkc0FuZFNjcm9sbCgoZXJyLCB2YWx1ZXMpID0+IHsKICAgICAgICBpZiAoIWVycikgewogICAgICAgICAgdGhpcy5tRGF0YT12YWx1ZXM7CiAgICAgICAgICB0aGlzLnNlbmRJbnF1ZXJ5KCk7CiAgICAgICAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgdmFsdWVzIG9mIGZvcm06ICcsIHZhbHVlcyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVDb25maXJtQmx1cihlKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7CiAgICAgIHRoaXMuY29uZmlybURpcnR5ID0gdGhpcy5jb25maXJtRGlydHkgfHwgISF2YWx1ZTsKICAgIH0sCiAgICBjb21wYXJlVG9GaXJzdFBhc3N3b3JkKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBjb25zdCBmb3JtID0gdGhpcy5mb3JtOwogICAgICBpZiAodmFsdWUgJiYgdmFsdWUgIT09IGZvcm0uZ2V0RmllbGRWYWx1ZSgncGFzc3dvcmQnKSkgewogICAgICAgIGNhbGxiYWNrKCdUd28gcGFzc3dvcmRzIHRoYXQgeW91IGVudGVyIGlzIGluY29uc2lzdGVudCEnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9LAogICAgdmFsaWRhdGVUb05leHRQYXNzd29yZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgY29uc3QgZm9ybSA9IHRoaXMuZm9ybTsKICAgICAgaWYgKHZhbHVlICYmIHRoaXMuY29uZmlybURpcnR5KSB7CiAgICAgICAgZm9ybS52YWxpZGF0ZUZpZWxkcyhbJ2NvbmZpcm0nXSwgeyBmb3JjZTogdHJ1ZSB9KTsKICAgICAgfQogICAgICBjYWxsYmFjaygpOwogICAgfSwKICAgIGhhbmRsZVdlYnNpdGVDaGFuZ2UodmFsdWUpIHsKICAgICAgbGV0IGF1dG9Db21wbGV0ZVJlc3VsdDsKICAgICAgaWYgKCF2YWx1ZSkgewogICAgICAgIGF1dG9Db21wbGV0ZVJlc3VsdCA9IFtdOwogICAgICB9IGVsc2UgewogICAgICAgIGF1dG9Db21wbGV0ZVJlc3VsdCA9IFsnLmNvbScsICcub3JnJywgJy5uZXQnXS5tYXAoZG9tYWluID0+IGAke3ZhbHVlfSR7ZG9tYWlufWApOwogICAgICB9CiAgICAgIHRoaXMuYXV0b0NvbXBsZXRlUmVzdWx0ID0gYXV0b0NvbXBsZXRlUmVzdWx0OwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"form.vue","sourceRoot":"src/views/contact","sourcesContent":["<template>\n  <div class=\"mTopu\" style=\"max-width: 800px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: -200px;\n    width: 90%;\">\n      \n      <!-- <div style=\"background-color:#001529;height:63px;margin-top:-50px;\" ></div> -->\n <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\n  <mdb-card style=\"width:99%;max-width:1200px;margin-bottom:3%;padding-top:42px;padding-bottom:42px;margin-top; \" >\n    <mdb-card-body>\n          <!-- <mdb-datatable-2 striped bordered small hover responsive fixedHeader\n      arrows maxHeight=\"400px\" v-model=\"data\" /> -->\n      \n\n <a-form :form=\"form\" @submit=\"handleSubmit\"  style=\"margin-left: auto;margin-right: auto;z-index:0;justify-content: space-around;\" layout=\"vertical\" >\n      <md-card class=\"md-layout-item md-size-50 md-small-size-100\" style=\"margin-left: auto;\n    margin-right: auto;\">\n        <md-card-header>\n          <div class=\"md-title text-center\">Products</div>\n        </md-card-header>\n\n        <md-card-content>\n\n        <a-form-item v-bind=\"formItemLayout\">\n      <span slot=\"label\">\n        Name&nbsp;\n        <a-tooltip title=\"What do you want us to call you?\">\n          <a-icon type=\"question-circle-o\" />\n        </a-tooltip>\n      </span>\n      <a-input\n        v-decorator=\"[\n          'name',\n          {\n            rules: [{ required: true, message: 'Please input your Name!', whitespace: true,value:nm }],\n          },\n        ]\"\n      />\n    </a-form-item>\n    <a-form-item v-bind=\"formItemLayout\" label=\"E-mail\">\n      <a-input\n        v-decorator=\"[\n          'email',\n          {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          },\n        ]\"\n      />\n    </a-form-item>\n\n    <a-form-item v-bind=\"formItemLayout\" label=\"Phone Number\">\n      <a-input\n        v-decorator=\"[\n          'phone',\n          {\n            rules: [{ required: true, message: 'Please input your phone number!' }],\n          },\n        ]\"\n        style=\"width: 100%\"\n      >\n        <a-select\n          slot=\"addonBefore\"\n          v-decorator=\"['prefix', { initialValue: '254' }]\"\n          style=\"width: 70px\"\n        >\n          <a-select-option value=\"254\">\n            +254\n          </a-select-option>\n         \n        </a-select>\n      </a-input>\n    </a-form-item>\n\n      <a-form-item v-bind=\"formItemLayout\" label=\"Message\">\n      <a-textarea\n        v-decorator=\"[\n          'msg',\n          {\n            rules: [{ \n                required: false, message: 'How can we help you?' }],\n          },\n        ]\"\n        style=\"width: 100%\"\n      >\n  \n      </a-textarea>\n    </a-form-item>\n \n\n    <!-- <a-form-item v-bind=\"tailFormItemLayout\">\n      <a-checkbox v-decorator=\"['agreement', { valuePropName: 'checked' }]\">\n        I have read the\n        <a href=\"\">\n          agreement\n        </a>\n      </a-checkbox>\n    </a-form-item> -->\n\n\n\n<!-- \n    <a-form-item v-bind=\"tailFormItemLayout\">\n      <a-button type=\"primary\" html-type=\"submit\">\n        Register\n      </a-button>\n    </a-form-item> -->\n    \n            <div class=\"text-center py-4 mt-3\">\n          <mdb-btn style=\"color:#e9ecef;background-color:#0c0f24;\" color=\"\" type=\"submit\" :disabled=\"sending\">Send Inquery</mdb-btn>\n        </div>\n          </md-card-content>\n     \n     \n\n\n      </md-card>\n\n   \n      <md-snackbar :md-active.sync=\"error\">{{ emsg }} </md-snackbar>\n  </a-form>\n<!-- \n    <form novalidate style=\"\n    margin-left: auto;\n    margin-right: auto;z-index:0;\n    justify-content: space-around;\" class=\"md-layout\" @submit.prevent=\"validateInquery\">\n      <md-card class=\"md-layout-item md-size-50 md-small-size-100\">\n        <md-card-header>\n          <div class=\"md-title text-center\">Products</div>\n        </md-card-header>\n\n        <md-card-content>\n          <div class=\"md-layout md-gutter\">\n             \n\n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('firstName')\">\n                <label for=\"first-name\">Name</label>\n                <md-input name=\"first-name\" id=\"first-name\" autocomplete=\"given-name\" v-model=\"form.firstName\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.firstName.required\">The first name is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.firstName.minlength\">Invalid name</span>\n              </md-field>\n            </div>\n\n    \n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('age')\">\n                <label for=\"age\">Phone numeber</label>\n                <md-input type=\"number\" id=\"age\" name=\"age\" autocomplete=\"age\" v-model=\"form.age\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.age.required\">The Price is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.age.maxlength\">Invalid Price</span>\n              </md-field>\n            </div>\n          </div>\n\n          <md-field :class=\"getValidationClass('email')\">\n            <label for=\"email\">Email</label>\n         \n            <span class=\"md-error\" v-if=\"!$v.form.email.required\">A valid email is required</span>\n            <span class=\"md-error\" v-else-if=\"!$v.form.email.email\">Invalid email</span>\n          </md-field>\n             \n               <div class=\"md-layout md-gutter\">\n           \n            <div class=\"md-layout-item md-small-size-100\">\n                          \n              <mdb-input\n                type=\"textarea\"\n                outline\n                inputClass=\"z-depth-1 p-3\"\n                label=\"Message\"  :rows=\"3\"\n                :disabled=\"sending\"\n                v-model=\"desc\"\n              />\n          \n            </div>\n          </div>\n        </md-card-content>\n     \n     \n\n            <div class=\"text-center py-4 mt-3\">\n          <mdb-btn style=\"color:#e9ecef;background-color:#0c0f24;\" color=\"\" type=\"submit\" :disabled=\"sending\">Send Inquery</mdb-btn>\n        </div>\n\n      </md-card>\n\n      <md-snackbar :md-active.sync=\"userSaved\">The Product {{ lastUser }} was saved with success!</md-snackbar>\n     \n    </form> -->\n    \n    \n    </mdb-card-body>\n  </mdb-card>\n\n  \n\n\n\n\n  </div>\n</template>\n\n<script>\n  import {  mdbCard, mdbCardBody, mdbBtn } from 'mdbvue';\n  \n//   import { validationMixin } from 'vuelidate';\n//   import {\n//     required,\n \n//     minLength,\n//     maxLength\n//   } from 'vuelidate/lib/validators'\n\nconst axios = require('axios');\n\nexport default {\n    components: {\n        mdbBtn,\n        // UploadImages,\n        mdbCard,\n        mdbCardBody,\n        // mdbInput,\n        // mdbIcon,\n        // mdbDatatable2 \n      },\n      \n  props: ['cid'],\n  data() {\n    return {\n      confirmDirty: false,\n      mData:null, \n      error:false,\n      emsg:null,\n      // residences,\n      autoCompleteResult: [],\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      },\n      tailFormItemLayout: {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      },\n    };\n  },\n  beforeCreate() {\n    this.form = this.$form.createForm(this, { name: 'register' });\n  },\n  methods: {\n    \n      sendInquery () {\n        this.sending = true\n        var murl=this.$store.state.mUrl;\n        // var form_data = new FormData();\n\n      // console.log(\"form_data: \"+this.mData.nmz);\n      \n// Display the key/value pairs\n// for (var pair of form_data.entries()) {\n//     console.log(pair[0]+ ', ' + pair[1]); \n// }\n var mCarray=[];\n if(this.$cookies.isKey(\"mp\")){\n    mCarray=JSON.parse(this.$cookies.get(\"mp\"))\n }\n const article = { \n    nm:this.mData.name ,\n    phone:this.mData.phone,\n    em:this.mData.email,\n    msg:this.mData.msg,\n    mCarray:mCarray\n };\n \n      console.log(\"form_data: \"+JSON.stringify(article));\n      axios({\n          method: 'POST',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          url: murl+'api.php?apicall=mail',\n          data: article,\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n      .then((response) => {\n        this.sending = false\n        console.log(\"response: \"+ JSON.stringify(response));\n        // console.log(\"response1: \"+ JSON.stringify(response.data));\n       \n    if(response.data.code==1){ \n            this.emsg = response.data.message;\n            //  this.clearForm1();\n            this.error = true\n           \n          }\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(\"error\"+response)\n      });\n        // Instead of this timeout, here you can call your API\n      //  this.sending = false\n      },\n    handleSubmit(e) {\n      e.preventDefault();\n\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.mData=values;\n          this.sendInquery();\n          console.log('Received values of form: ', values);\n        }\n      });\n    },\n    handleConfirmBlur(e) {\n      const value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    compareToFirstPassword(rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    },\n    validateToNextPassword(rule, value, callback) {\n      const form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    },\n    handleWebsiteChange(value) {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.autoCompleteResult = autoCompleteResult;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n.btn-default {\n  margin-left: 50%;\n  margin-right:50%;\n color:#e9ecef;\n background-color:#0c0f24 !important\n}\n.card .card-body{\n    padding: 0px;\n}\n  .md-progress-bar {\n    position: fixed;\n    height:7px;\n    top: 48px;\n    right: 0;\n    left: 0;\n    z-index: 3;\n  }\n   .card {\n        max-width: 400px;\n        width:80%;\n        margin-left:auto;\n      \n      margin-right:auto;\n    }\n    $c1: rgb(167, 202, 164);\n    $c2:  #001529;\n    $c3:   rgba(0, 0, 0, 0.87) ;\n    $c4:  rgba(0, 0, 0, 0.87);\n    .mTop{\n        /* margin-top: 73px; */\n        // background: linear-gradient(337deg,$c1 15%,  $c4 4%);\n        // background: linear-gradient($c2,$c3);\n        // margin-top: -23%;\n        // padding-top: 30%;\n    }\n        ul.ant-menu-inline-collapsed {\n    width: 8px;\n\n    }\n        \n    li.ant-menu-item{\n        padding: 1px;\n    }\n</style>"]}]}